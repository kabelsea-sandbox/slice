// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kabelsea-sandbox/slice/pkg/apq (interfaces: CacheAPQ)

// Package apqmock is a generated GoMock package.
package apqmock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCacheAPQ is a mock of CacheAPQ interface.
type MockCacheAPQ struct {
	ctrl     *gomock.Controller
	recorder *MockCacheAPQMockRecorder
}

// MockCacheAPQMockRecorder is the mock recorder for MockCacheAPQ.
type MockCacheAPQMockRecorder struct {
	mock *MockCacheAPQ
}

// NewMockCacheAPQ creates a new mock instance.
func NewMockCacheAPQ(ctrl *gomock.Controller) *MockCacheAPQ {
	mock := &MockCacheAPQ{ctrl: ctrl}
	mock.recorder = &MockCacheAPQMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheAPQ) EXPECT() *MockCacheAPQMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCacheAPQ) Get(arg0 context.Context, arg1, arg2 interface{}) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCacheAPQMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCacheAPQ)(nil).Get), arg0, arg1, arg2)
}

// Set mocks base method.
func (m *MockCacheAPQ) Set(arg0 context.Context, arg1, arg2 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockCacheAPQMockRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockCacheAPQ)(nil).Set), arg0, arg1, arg2)
}
